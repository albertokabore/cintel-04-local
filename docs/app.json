[{"name": "app.py", "content": "\"\"\"\nPenguin Dashboard App\nAn interactive web app to explore Palmer Penguins dataset\n\"\"\"\n\nimport plotly.express as px\nfrom shiny.express import input, ui\nfrom shinywidgets import render_plotly\nfrom shiny import render, reactive\nimport seaborn as sns\nfrom palmerpenguins import load_penguins\n\n# Load penguin data\npenguins_df = load_penguins()\n\n# Create sidebar for user inputs\nwith ui.sidebar(open=\"open\"):\n    ui.h2(\"Sidebar\")\n\n    ui.input_selectize(\n        \"selected_attribute\",\n        \"Select Attribute:\",\n        [\"bill_length_mm\", \"bill_depth_mm\", \"flipper_length_mm\", \"body_mass_g\"]\n    )\n\n    ui.input_numeric(\n        \"plotly_bin_count\",\n        \"Plotly Bin Count:\",\n        20\n    )\n\n    ui.input_slider(\n        \"seaborn_bin_count\",\n        \"Seaborn Bin Count:\",\n        5, 30, 15\n    )\n\n    ui.input_checkbox_group(\n        \"selected_species_list\",\n        \"Filter Species:\",\n        [\"Adelie\", \"Gentoo\", \"Chinstrap\"],\n        selected=[\"Adelie\", \"Gentoo\", \"Chinstrap\"],\n        inline=True\n    )\n\n    ui.hr()\n\n    ui.a(\n        \"GitHub\",\n        href=\"https://github.com/albertokabore/cintel-03-reactive\",\n        target=\"_blank\"\n    )\n\n# Main header\nui.h1(\"Palmer Penguins Dashboard\")\n\n# Data Table and Data Grid\nwith ui.layout_columns():\n    with ui.card(full_screen=True):\n        ui.h2(\"Penguin Data Table\")\n        @render.data_frame\n        def penguins_datatable():\n            return render.DataTable(filtered_data())\n\n    with ui.card(full_screen=True):\n        ui.h2(\"Penguin Data Grid\")\n        @render.data_frame\n        def penguins_datagrid():\n            return render.DataGrid(filtered_data(), filters=True)\n\n# Histograms\nwith ui.layout_columns():\n    with ui.card():\n        ui.h2(\"Plotly Histogram\")\n        @render_plotly\n        def plotly_histogram():\n            df = filtered_data().dropna(subset=[input.selected_attribute()])\n            fig = px.histogram(\n                df,\n                x=input.selected_attribute(),\n                nbins=input.plotly_bin_count(),\n                color=\"species\",\n                title=\"Plotly Histogram\"\n            )\n            return fig\n\n    with ui.card():\n        ui.h2(\"Seaborn Histogram\")\n        @render.plot\n        def seaborn_histogram():\n            df = filtered_data().dropna(subset=[input.selected_attribute()])\n            plot = sns.histplot(\n                data=df,\n                x=input.selected_attribute(),\n                bins=input.seaborn_bin_count(),\n                hue=\"species\",\n                multiple=\"stack\"\n            )\n            plot.set_title(\"Seaborn Histogram\")\n            return plot\n\n# Scatterplot\nwith ui.card(full_screen=True):\n    ui.card_header(\"Plotly Scatterplot: Species\")\n    @render_plotly\n    def plotly_scatterplot():\n        df = filtered_data().dropna(subset=[\n            \"bill_length_mm\",\n            \"bill_depth_mm\",\n            \"body_mass_g\",\n            \"species\",\n            \"island\",\n            \"sex\"\n        ])\n        fig = px.scatter(\n            df,\n            x=\"bill_length_mm\",\n            y=\"bill_depth_mm\",\n            color=\"species\",\n            size=\"body_mass_g\",\n            hover_data=[\"island\", \"sex\"],\n            title=\"Bill Length vs Bill Depth\"\n        )\n        return fig\n\n# --------------------------------------------------------\n# Reactive calculations and effects\n# --------------------------------------------------------\n\n@reactive.calc\ndef filtered_data():\n    selected_species = input.selected_species_list()\n    return penguins_df[penguins_df[\"species\"].isin(selected_species)]\n", "type": "text"}]